import omero
import ezomero
import omero.rtypes
import logger
from threading import Lock

mutex = Lock()

def import_image(conn, img_path, dataset_id, meta_dict, batch_tag):
    # import the image
    
    omeroConn = conn.get_omero_connection()
    namespace = omero.constants.metadata.NSCLIENTMAPANNOTATION
    with mutex:
        image_id = ezomero.ezimport(conn=omeroConn,
                                    target=img_path,
                                    dataset=dataset_id.getId(),
                                    ann=meta_dict,
                                    ns=namespace)
    
        if image_id is None: #failed to import the image(s)
            raise ValueError("Failed to upload the image with ezomero. Return an empty list")

    #additional tags:
    # batch_tag = [x for x in list(batch_tag.values()) if x != 'None'] #as a list, without the 'None'
    batch_tag = [str(x)+' '+str(batch_tag[x]) for x in batch_tag if batch_tag[x] != 'None']
    
    #add tag in the image
    for im in image_id: #in case of dual or more image in the same (generated by CD7)
        #image = conn.getObject("Image", im)
        image = conn.getImage(im)

        tags = [meta_dict['Microscope'], str(meta_dict['Lens Magnification'])+"X", meta_dict['Image type']]
        tags += batch_tag
        for tag_value in tags:
            tag_value = str(tag_value)
            conn.setAnnotationOnImage(image,tag_value)    
            #conn.setAnnotationOnImage(image,attributes={'textValue': tag_value})    
        
        # Add description
        if meta_dict.get('Description'):
            conn.setDescriptionOnImage(image, str(meta_dict.get('Description')))
        
        # Add comment
        if meta_dict.get("Comment"):
            conn.setCommentInImage(image,meta_dict.get("Comment"))
    
    return image_id

def check_duplicate_filename(conn, filename,dataset):
    for child in dataset.listChildren():
        if child.getName().startswith(filename):
            return True, child.getId()
        
    return False, None